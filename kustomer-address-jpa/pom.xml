<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.3</version> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.izertis.example</groupId>
    <artifactId>kustomer-jpa-example</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Kustomer JPA Example</name>
    <description>Kustomer JPA Example</description>

    <repositories>
        <repository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <properties>
        <java.version>21</java.version>
        <kotlin.version>2.2.0</kotlin.version>

        <basePackage>com.izertis.example</basePackage>
        <openApiApiPackage>${basePackage}.web</openApiApiPackage>
        <openApiModelPackage>${basePackage}.web.dtos</openApiModelPackage>
        <asyncApiModelPackage>${basePackage}.events.dtos</asyncApiModelPackage>
        <asyncApiProducerApiPackage>${basePackage}.events</asyncApiProducerApiPackage>
        <asyncApiConsumerApiPackage>${basePackage}.commands</asyncApiConsumerApiPackage>

        <spring-boot.version>${project.parent.version}</spring-boot.version>
        <spring-cloud.version>2025.0.0</spring-cloud.version>
        <spring-cloud-stream-schema.version>2.2.1.RELEASE</spring-cloud-stream-schema.version>
        <avro.version>1.11.1</avro.version>
        <spring-modulith.version>1.4.1</spring-modulith.version>

        <zenwave.version>2.0.2</zenwave.version>
        <zenwave-events-externalizer.version>1.0.2</zenwave-events-externalizer.version>

        <jakarta.validation-api.version>3.1.1</jakarta.validation-api.version>
        <mapstruct.version>1.6.3</mapstruct.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <karate.version>1.4.1</karate.version>
        <springdoc-openapi-starter-webmvc-ui.version>2.8.3</springdoc-openapi-starter-webmvc-ui.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.modulith</groupId>
                <artifactId>spring-modulith-bom</artifactId>
                <version>${spring-modulith.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- jpa -->
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-ant</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- kafka -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-stream-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-schema</artifactId>
            <version>${spring-cloud-stream-schema.version}</version>
        </dependency>
        <!-- avro -->
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-avro</artifactId>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-avro-serializer</artifactId>
            <version>5.3.0</version>
        </dependency>
        <!-- spring modulith -->
        <dependency>
            <groupId>org.springframework.modulith</groupId>
            <artifactId>spring-modulith-starter-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.modulith</groupId>
            <artifactId>spring-modulith-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>io.zenwave360.sdk</groupId>
            <artifactId>spring-modulith-events-scs</artifactId>
            <version>${zenwave-events-externalizer.version}</version>
        </dependency>
        <!-- utils -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>${jakarta.validation-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-mapstruct-binding</artifactId>
            <version>${lombok-mapstruct-binding.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <!-- swagger -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc-openapi-starter-webmvc-ui.version}</version>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webflux</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.intuit.karate</groupId>
            <artifactId>karate-core</artifactId>
            <version>${karate.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                <sourceDir>${project.build.directory}/generated-sources/openapi/src/main/kotlin</sourceDir>
                                <sourceDir>${project.build.directory}/generated-sources/zenwave/src/main/java</sourceDir>
                                <sourceDir>${project.build.directory}/generated-sources/avro</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                <sourceDir>${project.build.directory}/generated-sources/zenwave/src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <release>${java.version}</release>
                </configuration>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by Maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by Maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Surefire Plugin for Unit Tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- Failsafe Plugin for Integration Tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.5.1</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*IT.java</include>
                                <include>**/*IntegrationTest.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/*KarateIntegrationTest.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Failsafe Plugin for API Integration Tests (not transactional) -->
                        <id>api-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*KarateIntegrationTest.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>7.10.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/public/apis/openapi.yml</inputSpec>
                            <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
                            <generatorName>kotlin-spring</generatorName>
                            <apiPackage>${openApiApiPackage}</apiPackage>
                            <modelPackage>${openApiModelPackage}</modelPackage>
                            <modelNameSuffix>DTO</modelNameSuffix>
                            <addCompileSourceRoot>true</addCompileSourceRoot>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <typeMappings>
                                <typeMapping>Double=java.math.BigDecimal</typeMapping>
                            </typeMappings>
                            <configOptions>
                                <useSpringBoot3>true</useSpringBoot3>
                                <documentationProvider>none</documentationProvider>
                                <openApiNullable>false</openApiNullable>
                                <useOptional>false</useOptional>
                                <useTags>true</useTags>
                                <interfaceOnly>true</interfaceOnly>
                                <skipDefaultInterface>true</skipDefaultInterface>
                                <delegatePattern>false</delegatePattern>
                                <sortParamsByRequiredFlag>false</sortParamsByRequiredFlag>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>asyncapi-code-generation</id>
            <activation>
                <file>
                    <exists>${project.basedir}/src/main/resources/public/apis/asyncapi.yml</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.zenwave360.sdk</groupId>
                        <artifactId>zenwave-sdk-maven-plugin</artifactId>
                        <version>${zenwave.version}</version>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/public/apis/asyncapi.yml</inputSpec>
                            <skip>false</skip>
                            <addCompileSourceRoot>true</addCompileSourceRoot>
                            <addTestCompileSourceRoot>true</addTestCompileSourceRoot>
                        </configuration>
                        <executions>
                            <!-- DTOs -->
<!--							<execution>-->
<!--								<id>generate-asyncapi-dtos</id>-->
<!--								<phase>generate-sources</phase>-->
<!--								<goals>-->
<!--									<goal>generate</goal>-->
<!--								</goals>-->
<!--								<configuration>-->
<!--									<generatorName>jsonschema2pojo</generatorName>-->
<!--									<configOptions>-->
<!--										<modelPackage>${asyncApiModelPackage}</modelPackage>-->
<!--										<jsonschema2pojo.isUseJakartaValidation>true</jsonschema2pojo.isUseJakartaValidation>-->
<!--										<jsonschema2pojo.useLongIntegers>true</jsonschema2pojo.useLongIntegers>-->
<!--										<jsonschema2pojo.includeAdditionalProperties>true</jsonschema2pojo.includeAdditionalProperties>-->
<!--									</configOptions>-->
<!--								</configuration>-->
<!--							</execution>-->
                            <!-- Generate PROVIDER -->
                            <execution>
                                <id>generate-asyncapi</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <generatorName>spring-cloud-streams3</generatorName>
                                    <configOptions>
                                        <role>provider</role>
                                        <style>imperative</style>
                                        <transactionalOutbox>modulith</transactionalOutbox>
                                        <includeApplicationEventListener>true</includeApplicationEventListener>
                                        <modelPackage>${asyncApiModelPackage}</modelPackage>
                                        <producerApiPackage>${asyncApiProducerApiPackage}</producerApiPackage>
                                        <consumerApiPackage>${asyncApiConsumerApiPackage}</consumerApiPackage>
                                    </configOptions>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>io.zenwave360.sdk.plugins</groupId>
                                <artifactId>asyncapi-spring-cloud-streams3</artifactId>
                                <version>${zenwave.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>io.zenwave360.sdk.plugins</groupId>
                                <artifactId>asyncapi-jsonschema2pojo</artifactId>
                                <version>${zenwave.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <!-- Other plugins -->
                    <plugin>
                        <groupId>org.apache.avro</groupId>
                        <artifactId>avro-maven-plugin</artifactId>
                        <version>${avro.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>schema</goal>
                                </goals>
                                <phase>generate-sources</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/main/resources/public/apis/avro</sourceDirectory>
                            <outputDirectory>${project.basedir}/target/generated-sources/avro</outputDirectory>
                            <imports>
                                <import>${project.basedir}/src/main/resources/public/apis/avro/PaymentMethodType.avsc</import>
                                <import>${project.basedir}/src/main/resources/public/apis/avro/PaymentMethod.avsc</import>
                                <import>${project.basedir}/src/main/resources/public/apis/avro/Address.avsc</import>
                            </imports>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
